
## End User configurable options ###
SHELL = @SHELL@

@VPATH@
# Installation directories
prefix       = @prefix@
exec_prefix  = @exec_prefix@
bindir       = @bindir@
includedir   = @includedir@
libdir       = @libdir@
# Build directories
libbuild_dir = @libbuild_dir@
top_srcdir   = @top_srcdir@
srcdir       = @srcdir@

JC           = @JC@
JAR          = @JAR@
RM           = @RM@

TARGET  = $(libbuild_dir)/slog2update205to206.jar
PACKAGE = logformat.slog2.update
SRC     = MemoryPipedStream.java WrappedInputLog.java UpdateToLatest.java

OBJ     = $(SRC:.java=.class)

.SUFFIXES:      .java .class .jar

# CLASSDIR is where classfiles are located, all counted from the top
SRCDIR     = $(top_srcdir)
CLASSDIR   = ../../..
CLASSPATH  = ../../..:../../../../@old_slog2srcdir@
PKGDIR     = logformat/slog2/update

JCFLAGS = -sourcepath @JPATH_START@$(SRCDIR)@JPATH_FINAL@ -classpath @JPATH_START@$(CLASSPATH)@JPATH_FINAL@ -d @JPATH_START@$(CLASSDIR)@JPATH_FINAL@ @JFLAGS@

.java.class:
	$(JC) $(JCFLAGS) $(JFLAGS) @JPATH_START@$<@JPATH_FINAL@

ALL: $(TARGET)

$(TARGET): $(OBJ)
	cd $(CLASSDIR) && \
	$(RM) $(PACKAGE).manifest && \
	echo "Main-Class: $(PACKAGE).UpdateToLatest" > $(PACKAGE).manifest ; \
	jarfile=@JPATH_START@$@@JPATH_FINAL@ ; \
	$(JAR) $(JARFLAGS)cfm $${jarfile} $(PACKAGE).manifest ; \
	cd ../@old_slog2srcdir@ && \
	for dir in old_base/io/ old_base/drawable/ old_logformat/slog2/ \
	           old_logformat/slog2/input/ old_logformat/slog2/pipe/ ; do \
	    classdir_prefix=@JPATH_START@$${dir}@JPATH_FINAL@ ; \
	    $(JAR) $(JARFLAGS)uf $${jarfile} $${classdir_prefix}*.class ; \
	done ; \
        cd ../src && \
	for dir in base/io/ base/drawable/ logformat/slog2/ \
	           logformat/slog2/output/ $(PKGDIR)/ ; do \
	    classdir_prefix=@JPATH_START@$${dir}@JPATH_FINAL@ ; \
	    $(JAR) $(JARFLAGS)uf $${jarfile} $${classdir_prefix}*.class ; \
	done ; \
	$(JAR) $(JARFLAGS)uf $${jarfile} jumpshot.colors

clean:
	cd $(CLASSDIR) && \
	$(RM) $(PACKAGE).manifest $(PKGDIR)/*.class 

rmlib:
	$(RM) $(TARGET1)

realclean: clean rmlib

distclean: realclean
	@-$(RM) Makefile
